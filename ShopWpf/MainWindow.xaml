<Window x:Class="ShopWpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:logic="clr-namespace:ShopWpf.Logic"
        xmlns:cnv="clr-namespace:ShopWpf.Logic.Converters"
        xmlns:beh="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="Api Controller" MinHeight="800" SizeToContent="Height" Width="1300">

    <Window.Resources>
        <cnv:NotNullToBoolConverter x:Key="NotNullToBool"/>
        <cnv:NotNullToVisibilityConverter x:Key="NotNullToVisibility"/>
        <cnv:UrlToBitmapImageConverter x:Key="UrlToBitmapImage"/>
        <cnv:PutOptionToVisibilityConverter x:Key="PutOptionToVisibility"/>
        <cnv:PostOptionToVisibilityConverter x:Key="PostOptionToVisibility"/>
        <cnv:VisibilityToBoolConverter x:Key="VisibilityToBool"/>
        <cnv:DeveloperGridVisibilityConverter x:Key="DeveloperGridVisibility"/>
        <cnv:GameGridVIsibilityConverter x:Key="GameGridVIsibility"/>

        <Style x:Key="ItemMenuLabelStyle" TargetType="Label">
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="ItemMenuTextBoxStyle" TargetType="TextBox">
            <Setter Property="Margin" Value="10,0"/>
        </Style>

        <BitmapImage x:Key="LoadingImage" UriSource="/Resources/loading.png" />
        <BitmapImage x:Key="DefaultImage" UriSource="/Resources/default.png" />

    </Window.Resources>

    <Grid Background="#FFE5E5E5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid Visibility="Visible" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" ></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>

            <Grid Grid.Column="0" Grid.Row="0" Background="White">
                <StackPanel>
                    <Grid Background="#FFE5E5E5">
                        <TabControl BorderThickness="0" SelectedItem="{Binding SelectedTabItem, UpdateSourceTrigger=PropertyChanged,Mode=OneWayToSource}">
                            <beh:Interaction.Triggers>
                                <beh:EventTrigger EventName="SelectionChanged">
                                    <beh:InvokeCommandAction Command="{Binding TabChangedCommand}" />
                                </beh:EventTrigger>
                            </beh:Interaction.Triggers>

                            <TabItem Tag="{Binding Source={x:Static logic:TableNames.Developer}}" IsSelected="True" Height="30" Padding="10,0,10,0" Header="{Binding Source={x:Static logic:TableNames.Developer}}"></TabItem>
                            <TabItem Tag="{Binding Source={x:Static logic:TableNames.Game}}"      Height="30" Padding="10,0,10,0" Header="{Binding Source={x:Static logic:TableNames.Game}}"></TabItem>
                            <TabItem Tag="{Binding Source={x:Static logic:TableNames.GameStats}}" Height="30" Padding="10,0,10,0" Header="{Binding Source={x:Static logic:TableNames.GameStats}}"></TabItem>
                            <TabItem Tag="{Binding Source={x:Static logic:TableNames.Review}}"    Height="30" Padding="10,0,10,0" Header="{Binding Source={x:Static logic:TableNames.Review}}"></TabItem>
                            <TabItem Tag="{Binding Source={x:Static logic:TableNames.User}}"      Height="30" Padding="10,0,10,0" Header="{Binding Source={x:Static logic:TableNames.User}}"></TabItem>
                        </TabControl>
                        <Button Command="{Binding RefreshCommand}" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,0,0,0" Width="30" Height="30" Content="⭯"></Button>
                    </Grid>

                    <Grid Visibility="{Binding SelectedTabItem.Tag, Converter={StaticResource DeveloperGridVisibility},UpdateSourceTrigger=PropertyChanged}">
                        <DataGrid Visibility="{Binding DataGridVisibility}" IsReadOnly="True" ItemsSource="{Binding Developers, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedItem}"  MaxHeight="600" AutoGenerateColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" CanUserAddRows="False" CanUserDeleteRows="False" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="*" Header="ID" Binding="{Binding id, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Width="*" Header="Name" Binding="{Binding name, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Width="*" Header="Logo URL" Binding="{Binding logoURL, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Width="*" Header="Registration Date" Binding="{Binding registrationDate, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>

                    <Grid Visibility="{Binding SelectedTabItem.Tag, Converter={StaticResource GameGridVIsibility},UpdateSourceTrigger=PropertyChanged}">
                        <DataGrid Visibility="{Binding DataGridVisibility}" IsReadOnly="True" ItemsSource="{Binding Games, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedItem}"  MaxHeight="600" AutoGenerateColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" CanUserAddRows="False" CanUserDeleteRows="False" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="*" Header="ID" Binding="{Binding id, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Width="*" Header="Name" Binding="{Binding name, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Width="*" Header="Logo URL" Binding="{Binding logoURL, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Width="*" Header="Price" Binding="{Binding price, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Width="*" Header="Publish Date" Binding="{Binding publishDate, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Width="*" Header="Achievements Count" Binding="{Binding achievementsCount, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                    <Label Visibility="{Binding GetRequestMessageVisibility}" VerticalAlignment="Top" HorizontalAlignment="Center" Content="{Binding GetRequestMessage}"></Label>
                </StackPanel>
            </Grid>

            <Grid MinHeight="40" Margin="0,0,0,10" Grid.Column="0" Grid.Row="1" Visibility="{Binding DataGridVisibility}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button x:Name="PostBtn" Margin="10,0,10,0" Grid.Column="0" Grid.Row="0" Width="auto" Height="30" VerticalAlignment="Bottom" Background="Lime"  Content="Post" Command="{Binding PostCommand}"></Button>
                <Button x:Name="PutBtn" IsEnabled="{Binding SelectedItem, Converter={StaticResource NotNullToBool}, UpdateSourceTrigger=PropertyChanged}" Margin="10,0,10,0" Grid.Column="1" Grid.Row="0" Width="auto" Height="30" VerticalAlignment="Bottom" Background="Orange" Content="Put" Command="{Binding PutCommand}" ></Button>
                <Button x:Name="DeleteBtn" IsEnabled="{Binding SelectedItem, Converter={StaticResource NotNullToBool}, UpdateSourceTrigger=PropertyChanged}" Margin="10,0,10,0" Grid.Column="2" Grid.Row="0" Width="auto" Height="30" VerticalAlignment="Bottom" Background="red" Content="Delete" Command="{Binding DeleteCommand}"></Button>
            </Grid>
        </Grid>

        <Grid x:Name="ItemMenu" Grid.Column="2" MaxWidth="222" Visibility="{Binding ItemMenuVisibility}">
            <Border BorderBrush="Black" BorderThickness="2,0,0,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <StackPanel x:Name="ItemIDMenu" Grid.Row="0" Visibility="{Binding PostOptionSelected, Converter={StaticResource PutOptionToVisibility}, UpdateSourceTrigger=PropertyChanged}">
                        <Label HorizontalAlignment="Center" DataContext="{Binding SelectedItem}" ContentStringFormat="ID: {0}" Content="{Binding id, UpdateSourceTrigger=PropertyChanged}"></Label>
                        <Line X1="0" X2="220" Stroke="Black" Margin="0,0,0,0"></Line>
                    </StackPanel>

                    <StackPanel Grid.Row="1">
                        <StackPanel x:Name="LogoMenu" Visibility="Visible">
                            <Label HorizontalAlignment="Center" Content="Logo"></Label>
                            <Grid>
                                <Image Visibility="{Binding PostOptionSelected, Converter={StaticResource PutOptionToVisibility},UpdateSourceTrigger=PropertyChanged}" Stretch="UniformToFill" Height="200" Margin="10,0,10,0" Source="{StaticResource LoadingImage}" ></Image>
                                <Grid Visibility="{Binding PostOptionSelected, Converter={StaticResource PutOptionToVisibility},UpdateSourceTrigger=PropertyChanged}">
                                    <Image  DataContext="{Binding SelectedItem}" Stretch="UniformToFill" Height="200" Margin="10,0,10,0" Source="{Binding logoURL,Converter={StaticResource UrlToBitmapImage}}"></Image>
                                </Grid>
                                <Image Visibility="{Binding PostOptionSelected, Converter={StaticResource PostOptionToVisibility},UpdateSourceTrigger=PropertyChanged}" Stretch="UniformToFill" Height="200" Margin="10,0,10,0" Source="{StaticResource DefaultImage}" ></Image>
                                <Image Visibility="Visible" Stretch="UniformToFill" Height="200" Margin="10,0,10,0" Source="{Binding OpenedImage, Mode=OneWay}"></Image>
                            </Grid>
                            <Button Command="{Binding OpenImageFromFileCommand}" IsEnabled="{Binding DataGridVisibility, Converter={StaticResource VisibilityToBool}, UpdateSourceTrigger=PropertyChanged}" Margin="10,10,10,0" Height="30" Content="Open..."></Button>
                            <Line X1="0" X2="220" Stroke="Black" Margin="0,20,0,0"></Line>
                        </StackPanel>

                        <Grid Visibility="{Binding SelectedTabItem.Tag, Converter={StaticResource DeveloperGridVisibility},UpdateSourceTrigger=PropertyChanged}">
                            <StackPanel DataContext="{Binding Test}">
                                <Label Style="{StaticResource ItemMenuLabelStyle}" Content="Name" />
                                <TextBox Style="{StaticResource ItemMenuTextBoxStyle}" Text="{Binding name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                            </StackPanel>
                        </Grid>

                        <Grid Visibility="{Binding SelectedTabItem.Tag, Converter={StaticResource GameGridVIsibility},UpdateSourceTrigger=PropertyChanged}">
                            <StackPanel DataContext="{Binding Test}">
                                <Label Style="{StaticResource ItemMenuLabelStyle}" Content="Developer ID"></Label>
                                <TextBox Style="{StaticResource ItemMenuTextBoxStyle}" Text="{Binding developerID, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" ></TextBox>
                                <Label Style="{StaticResource ItemMenuLabelStyle}" Content="Name"></Label>
                                <TextBox Style="{StaticResource ItemMenuTextBoxStyle}" Text="{Binding name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></TextBox>
                                <Label Style="{StaticResource ItemMenuLabelStyle}" Content="Price"></Label>
                                <TextBox Style="{StaticResource ItemMenuTextBoxStyle}" Text="{Binding price, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></TextBox>
                                <Label Style="{StaticResource ItemMenuLabelStyle}" Content="Achievements Count (optional)"></Label>
                                <TextBox Style="{StaticResource ItemMenuTextBoxStyle}" Text="{Binding achievementsCount, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></TextBox>
                            </StackPanel>
                        </Grid>

                        <StackPanel>
                            <StackPanel x:Name="PostGameStatsMenu" Visibility="Collapsed">
                                <Label HorizontalAlignment="Center" Content="User ID"></Label>
                                <TextBox x:Name="GameStatsUserID"  Margin="10,0" Background="White"></TextBox>
                                <Label HorizontalAlignment="Center" Content="Game ID"></Label>
                                <TextBox x:Name="GameStatsGameID"  Margin="10,0" Background="White"></TextBox>
                            </StackPanel>

                            <StackPanel x:Name="PutGameStatsMenu" Visibility="Collapsed">
                                <CheckBox x:Name="GameStatsIsGameLaunched" HorizontalAlignment="Center"  Margin="0,10" Content="Is Game Launched"></CheckBox>
                                <Label HorizontalAlignment="Center" Content="Gotten Achievements"></Label>
                                <TextBox x:Name="GameStatsGottenAchievements"  Margin="10,0" Background="White"></TextBox>
                                <Label HorizontalAlignment="Center" Content="Hours Played"></Label>
                                <TextBox x:Name="GameStatsHoursPlayed"  Margin="10,0" Background="White"></TextBox>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel>
                            <StackPanel x:Name="PostReviewMenu" Visibility="Collapsed">
                                <Label HorizontalAlignment="Center" Content="Game ID"></Label>
                                <TextBox x:Name="ReviewGameID"  Margin="10,0" Background="White"></TextBox>
                                <Label HorizontalAlignment="Center" Content="User ID"></Label>
                                <TextBox x:Name="ReviewUserID"  Margin="10,0" Background="White"></TextBox>

                            </StackPanel>
                            <StackPanel x:Name="PutReviewMenu" Visibility="Collapsed">
                                <CheckBox x:Name="ReviewIsPositive" HorizontalAlignment="Center"  Margin="0,10" Content="Is Positive"></CheckBox>
                                <Label HorizontalAlignment="Center" Content="Text (optional)"></Label>
                                <TextBox x:Name="ReviewText"  Margin="10,0" Background="White" TextWrapping="Wrap"></TextBox>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel x:Name="UserMenu" Visibility="Collapsed">
                            <Label HorizontalAlignment="Center" Content="Login"></Label>
                            <TextBox x:Name="UserLogin"  Margin="10,0" Background="White"></TextBox>
                            <Label HorizontalAlignment="Center" Content="Password"></Label>
                            <TextBox x:Name="UserPassword"  Margin="10,0" Background="White"></TextBox>
                            <Label HorizontalAlignment="Center" Content="Nickname"></Label>
                            <TextBox x:Name="UserNickname"  Margin="10,0" Background="White"></TextBox>
                            <Label HorizontalAlignment="Center" Content="Email (optional)"></Label>
                            <TextBox x:Name="UserEmail"  Margin="10,0" Background="White"></TextBox>
                        </StackPanel>

                    </StackPanel>

                    <StackPanel Visibility="{Binding PutPostRequestMessageVisibility}" Grid.Row="2" VerticalAlignment="Bottom">
                        <Line X1="0" X2="220" Stroke="Black" Margin="0,10,0,10"></Line>
                        <TextBlock Text="{Binding PutPostRequestMessage, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Center" Background="White" Height="auto" Margin="10,0" Visibility="Visible" TextWrapping="Wrap"></TextBlock>
                    </StackPanel>

                    <StackPanel Grid.Row="3"  VerticalAlignment="Bottom">
                        <Line X1="0" X2="220" Margin="0,10,0,0" Stroke="Black"></Line>
                        <Button Visibility="{Binding PostOptionSelected, Converter={StaticResource PostOptionToVisibility},UpdateSourceTrigger=PropertyChanged}" Command="{Binding PostItemCommand}"  IsEnabled="{Binding DataGridVisibility, Converter={StaticResource VisibilityToBool}, UpdateSourceTrigger=PropertyChanged}" Height="30" Margin="10,10,10,10" Background="Lime" Content="Submit"></Button>
                        <Button Visibility="{Binding PostOptionSelected, Converter={StaticResource PutOptionToVisibility},UpdateSourceTrigger=PropertyChanged}" Command="{Binding UpdateItemCommand}" IsEnabled="{Binding DataGridVisibility, Converter={StaticResource VisibilityToBool}, UpdateSourceTrigger=PropertyChanged}" Height="30" Margin="10,10,10,10" Background="Orange" Content="Update"></Button>
                        <Button Command="{Binding CloseItemMenuCommand}" Height="30" Margin="10,0,10,10" Background="Red" Content="Close"  ></Button>
                    </StackPanel>

                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>
